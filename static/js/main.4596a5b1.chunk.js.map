{"version":3,"sources":["components/SearchBar.js","apis/edamam.js","components/Ingredient.js","components/HealthLabel.js","components/RecipeDetail.js","components/RecipeList.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","e","_this","setState","target","value","onFormSubmit","preventDefault","props","onTermSubmit","react_default","a","createElement","className","onSubmit","this","onChange","type","placeholder","React","Component","axios","create","baseURL","params","app_id","app_key","Ingredient","item","HealthLabel","_ref","label","labelArray","split","newLabel","i","length","background","Vegan","Vegetarian","PeanutFree","TreeNutFree","AlcoholFree","SugarConscious","AlcoholCocktail","style","backgroundColor","RecipeDetail","recipe","calories","parseInt","ingredients","map","ingredient","src_components_Ingredient","text","labels","healthLabels","components_HealthLabel","onClick","window","open","url","src","image","alt","RecipeList","recipes","textAlign","paddingTop","recipesList","src_components_RecipeDetail","key","uri","App","_callee","response","regenerator_default","wrap","_context","prev","next","edamam","get","q","sent","data","hits","stop","components_SearchBar","components_RecipeList","ReactDOM","render","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.4596a5b1.chunk.js","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component {\n  state = { term: '' };\n\n  onInputChange = e => {\n    this.setState({ term: e.target.value });\n  };\n\n  onFormSubmit = e => {\n    e.preventDefault();\n\n    this.props.onTermSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className='ui search-bar'>\n        <form className='ui form' onSubmit={this.onFormSubmit}>\n          <input\n            onChange={this.onInputChange}\n            value={this.state.term}\n            type='text'\n            className='centerInput'\n            placeholder='banana, yogurt, etc'\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import axios from 'axios';\n\nconst KEY = '0752e81fa03298d827c73e19abb7ee62';\nconst ID = '5cbcf26e';\n\nexport default axios.create({\n  baseURL: 'https://api.edamam.com',\n  params: {\n    app_id: ID,\n    app_key: KEY\n  }\n});\n","import React from 'react';\nimport './Ingredient.css';\n\nconst Ingredient = props => {\n  return <div className='item'>{props.item}</div>;\n};\n\nexport default Ingredient;\n","import React from 'react';\n\nconst HealthLabel = ({ label }) => {\n  var labelArray = label.split('-');\n\n  var newLabel = '';\n  for (let i = 0; i < labelArray.length; i++) {\n    newLabel = newLabel + labelArray[i];\n  }\n\n  const colors = {\n    Vegan: '#3D9970',\n    Vegetarian: '#2ECC40',\n    PeanutFree: '#FFDC00',\n    TreeNutFree: '#FF851B',\n    AlcoholFree: '#B10DC9',\n    SugarConscious: '#7FDBFF',\n    AlcoholCocktail: '#85144b'\n  };\n\n  const background = colors[newLabel];\n\n  return (\n    <div className='ui label' style={{ backgroundColor: background }}>\n      {label}\n    </div>\n  );\n};\n\nexport default HealthLabel;\n","import React from 'react';\nimport './RecipeDetail.css';\nimport Ingredient from './Ingredient';\nimport HealthLabel from './HealthLabel';\n\nconst RecipeDetail = ({ recipe }) => {\n  const calories = parseInt(recipe.calories);\n\n  const ingredients = recipe.ingredients.map(ingredient => {\n    return <Ingredient item={ingredient.text} />;\n  });\n\n  const labels = recipe.healthLabels.map(label => {\n    return <HealthLabel label={label} />;\n  });\n\n  return (\n    <div\n      className='item recipe-detail'\n      onClick={() => {\n        window.open(recipe.url);\n      }}\n    >\n      <img\n        className='ui image rounded small middle aligned'\n        src={recipe.image}\n        alt={recipe.label}\n      />\n      <div className='content'>\n        <div className='header big ui'>{recipe.label}</div>\n        <div className='meta'>{calories} Calories</div>\n        <div className='description ui horizontal divided list'>\n          {ingredients}\n        </div>\n      </div>\n      <div className='top-right-labels'>{labels}</div>\n    </div>\n  );\n};\n\nexport default RecipeDetail;\n","import React from 'react';\nimport RecipeDetail from './RecipeDetail';\nimport './RecipeDetail.css';\n\nconst RecipeList = props => {\n  if (!props.recipes.length) {\n    return (\n      <div style={{ textAlign: 'center', paddingTop: '50px' }}>\n        Enter a list of ingredients to display recipes\n      </div>\n    );\n  }\n\n  const recipesList = props.recipes.map(recipe => {\n    return <RecipeDetail key={recipe.recipe.uri} recipe={recipe.recipe} />;\n  });\n\n  return <div className='ui list recipe-list very relaxed'>{recipesList}</div>;\n};\n\nexport default RecipeList;\n","import React from 'react';\nimport './App.css';\nimport SearchBar from './SearchBar';\nimport edamam from '../apis/edamam';\nimport RecipeList from './RecipeList';\n\nclass App extends React.Component {\n  state = { recipes: [] };\n\n  onTermSubmit = async term => {\n    const response = await edamam.get('/search', {\n      params: { q: term }\n    });\n    this.setState({ recipes: response.data.hits });\n  };\n\n  render() {\n    return (\n      <div className='app ui'>\n        <h1 className='ui header white floated left'>Bits Into Bites</h1>\n        <SearchBar onTermSubmit={this.onTermSubmit} />\n        <RecipeList recipes={this.state.recipes} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}